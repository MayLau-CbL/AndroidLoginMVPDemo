name: Build and Distribute APK

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: '17'
    
    - name: Set up Android SDK
      uses: android-actions/setup-android@v3

    - name: Download Dependencies
      run: ./gradlew build

    - name: Decrypt and set up Android keystore
      env:
        ANDROID_KEYSTORE: ${{ secrets.ANDROID_KEYSTORE }}
      run: |
        echo $ANDROID_KEYSTORE | base64 --decode > keystore.jks

    - name: Build Release apk
      env:
        RELEASE_KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
        RELEASE_KEYSTORE_ALIAS: ${{ secrets.KEYSTORE_ALIAS }}
        RELEASE_KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
      run: ./gradlew assembleRelease --stacktrace

    - name: Get release file apk path
      id: releaseApk
      run: echo "apkfile=$(find app/build/outputs/apk/release/*.apk)" >> $GITHUB_OUTPUT


    # - name: Build APK
    #   run: ./gradlew assembleRelease

    # - name: Sign APK
    #   run: |
    #     jarsigner -verbose -sigalg SHA1withRSA -digestalg SHA1 -keystore app/my-release-key.keystore -storepass ${{ secrets.KEYSTORE_PASSWORD }} -keypass ${{ secrets.KEY_PASSWORD }} app/build/outputs/apk/release/app-release-unsigned.apk ${{ secrets.KEYSTORE_ALIAS }}
    #     "${{ runner.androidSdkRoot }}/build-tools/34.0.0/zipalign" -v 4 app/build/outputs/apk/release/app-release-unsigned.apk app/build/outputs/apk/release/app-release.apk

    - name: Upload to Firebase App Distribution
      uses: wzieba/Firebase-Distribution-Github-Action@v1
      with:
        appId: ${{ secrets.FIREBASE_APP_ID }}
        token: ${{ secrets.FIREBASE_TOKEN }}
        groups: testers
        file: ${{ steps.releaseApk.outputs.apkfile }}